swagger: "2.0"
info:
  version: "1.0.0"
  title: "API"
host: "127.0.0.1:32323"
basePath: "/api/v1"
schemes:
- "http"
paths:
  /resource:
    get:
      tags:
      - "resource"
      summary: "List resources"
      operationId: "listResources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "__limit"
        in: "query"
        description: "The number of results to return"
        type: "integer"
      - name: "__skip"
        in: "query"
        description: "The number of results to skip"
        type: "integer"
      responses:
        "200":
          description: "Ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/Resource"
    post:
      tags:
      - "resource"
      summary: "Create a resource"
      operationId: "createResource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Resource object"
        required: true
        schema:
          $ref: "#/definitions/Resource"
      responses:
        "200":
          description: "Ok"
    put:
      tags:
      - "resource"
      summary: "Update resources"
      operationId: "updateResources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Resource objects"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Resource"
      responses:
        "200":
          description: "Ok"      
  /resource/{_id}:
    get:
      tags:
      - "resource"
      summary: "Read a resource"
      operationId: "readResource"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of resource"
        required: true
        type: "string"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Resource"
        "404":
          description: "Not found"
    put:
      tags:
      - "resource"
      summary: "Update a resource"
      operationId: "updateResource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of resource"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Resource object"
        required: true
        schema:
          $ref: "#/definitions/Resource"
      responses:
        "200":
          description: "Ok"
    delete:
      tags:
      - "resource"
      summary: "Delete a resource"
      operationId: "deleteResource"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of resource"
        required: true
        type: "string"
      responses:
        "200":
          description: "Ok"
  /campaign:
    get:
      tags:
      - "campaign"
      summary: "List Campaign"
      operationId: "listCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "__limit"
        in: "query"
        description: "The number of results to return"
        type: "integer"
      - name: "__skip"
        in: "query"
        description: "The number of results to skip"
        type: "integer"
      responses:
        "200":
          description: "Ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/Campaign"
    post:
      tags:
      - "campaign"
      summary: "Create a Campaign"
      operationId: "createCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Campaign object"
        required: true
        schema:
          $ref: "#/definitions/Campaign"
      responses:
        "200":
          description: "Ok"
    put:
      tags:
      - "campaign"
      summary: "Update Campaign"
      operationId: "updateCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Campaign objects"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Campaign"
      responses:
        "200":
          description: "Ok"  
  /campaign/{_id}:
    get:
      tags:
      - "campaign"
      summary: "Read a Campaign"
      operationId: "readCampaign"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of Campaign"
        required: true
        type: "string"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Campaign"
        "404":
          description: "Not found"
    put:
      tags:
      - "campaign"
      summary: "Update a Campaign"
      operationId: "updateCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of Campaign"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Campaign object"
        required: true
        schema:
          $ref: "#/definitions/Campaign"
      responses:
        "200":
          description: "Ok"
    delete:
      tags:
      - "campaign"
      summary: "Delete a Campaign"
      operationId: "deleteCampaign"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "Id of Campaign"
        required: true
        type: "string"
      responses:
        "200":
          description: "Ok"
  /proccess:
    get:
      tags:
      - "process"
      summary: "List Process"
      operationId: "listProcess"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "__limit"
        in: "query"
        description: "The number of results to return"
        type: "integer"
      - name: "__skip"
        in: "query"
        description: "The number of results to skip"
        type: "integer"
      responses:
        "200":
          description: "Ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/Process"
definitions:
  Resource:
    type: "object"
  Campaign:
    type: "object"
    properties:
      name: 
        type: "string"
        description: "The campaign name"
      query:
        type: "string"
        description: "The original query"
      resources:
        type: "array"
        description: "The list of resource id's"
        items:
          type: "string"
      owner:
        type: "string"
        description: "The unique id of the campaign owner"
      excluded:
        type: "array"
        description: "The list of excluded resource id's"
        items:
          type: "string"
  Process:
    type: "object"
    description: "The structure that represents the campaign process"
    properties:
      campaign:
        type: "string"
        description: "The campaign id"
      requests:
        type: "array"
        description: "The list of friend requests"
        items:
          type: "string"
      friends:
        type: "array"
        description: "The list of friends"
        items:
          type: "string"
      chats:
        type: "array"
        description: "The list of chats"
        items:
          type: "string"
      candidates:
        type: "array"
        description: "The list of candidates"
        items:
          type: "string"   
      